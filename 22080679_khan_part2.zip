import Controller.Controller;
import view.GUI;
import view.CompetitionGUI;
import model.CompetitorList;
import model.User;

import javax.swing.*;
import java.awt.*;

public class Main {
    private JFrame selectionFrame;
    private JLabel statusLabel; // New label for status messages

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new Main().initializeGUI());
    }

    private void initializeGUI() {
        createSelectionFrame();
        setupSelectionPanel();
        setupStatusLabel();
        displaySelectionFrame();
    }

    private void createSelectionFrame() {
        selectionFrame = new JFrame("Role Selection");
        selectionFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        selectionFrame.setSize(400, 400);
        selectionFrame.setLocationRelativeTo(null);
    }

    private void setupSelectionPanel() {
        JPanel selectionPanel = new JPanel(new GridLayout(3, 1)); // Updated for 3 rows
        addButtonToPanel(selectionPanel, "Staff", "staff");
        addButtonToPanel(selectionPanel, "Competitor", "competitor");
        selectionFrame.add(selectionPanel);
    }

    private void addButtonToPanel(JPanel panel, String buttonText, String role) {
        JButton button = new JButton(buttonText);
        button.addActionListener(e -> {
            openCompetitionGUI(role);
            System.out.println(buttonText + " button clicked"); // Logging button click
        });
        button.setBackground(Color.LIGHT_GRAY); // Set button background color
        button.setToolTipText("Click to select " + role); // Set tooltip text
        panel.add(button);
    }

    private void setupStatusLabel() {
        statusLabel = new JLabel("Select your role");
        statusLabel.setHorizontalAlignment(SwingConstants.CENTER);
        selectionFrame.add(statusLabel, BorderLayout.SOUTH);
    }

    private void displaySelectionFrame() {
        selectionFrame.setVisible(true);
    }
    private void openCompetitionGUI(String role) {
    selectionFrame.dispose();

    CompetitorList model = new CompetitorList();
    try {
        model.readCompetitorsFromCSV("path_to_competitors.csv");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error reading from CSV file", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    User user = new User(role);
    CompetitionGUI competitionView = new CompetitionGUI(model, user);

    competitionView.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    competitionView.pack();
    competitionView.setLocationRelativeTo(null);
    competitionView.setVisible(true);
}
}

